package com.lru.impl;

import java.util.HashMap;
import java.util.Map;

public class LRUCache {
   
   Node head = new Node(0, 0), tail = new Node(0, 0);
   Map<Integer, Node> map = new HashMap<>();
   int capacity;
   
   public LRUCache(int _capacity) {
	   capacity = _capacity;
	   head.next = tail;
	   tail.prev = head;
   }
   /* Remove a node and adjust the corresponding previous
    * node->prev->next = node->next
    * node->next->prev = node->next
    */
   
   private void remove(Node node) {
	   map.remove(node.key);
	   node.prev.next = node.next;
	   node.next.prev = node.prev;   
   }
   
   private void insert(Node node) {
	   map.put(node.key, node);
	   node.next = head.next;
	   node.next.prev = node;
	   node.prev = head;
	   head.next = node;
   }
   
}
